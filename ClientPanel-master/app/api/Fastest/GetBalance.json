{
  "meta": {
    "options": {
      "linkedFile": "/views/recharge.ejs",
      "linkedForm": "formMobileRecharge"
    },
    "$_POST": [
      {
        "type": "text",
        "options": {
          "rules": {}
        },
        "name": "UserId"
      },
      {
        "type": "text",
        "options": {
          "rules": {}
        },
        "name": "Token"
      }
    ],
    "$_SERVER": [
      {
        "type": "text",
        "name": "REMOTE_ADDR"
      }
    ]
  },
  "exec": {
    "steps": {
      "name": "",
      "module": "core",
      "action": "trycatch",
      "options": {
        "try": {
          "steps": {
            "name": "",
            "module": "core",
            "action": "condition",
            "options": {
              "if": "{{$_POST.UserId&&$_POST.Token}}",
              "then": {
                "steps": [
                  {
                    "name": "getSalt",
                    "module": "dbconnector",
                    "action": "single",
                    "options": {
                      "connection": "postgres_gcpServer",
                      "sql": {
                        "type": "SELECT",
                        "columns": [
                          {
                            "table": "t_api_token",
                            "column": "salt",
                            "alias": "getSaltvalue"
                          },
                          {
                            "table": "t_api_token",
                            "column": "ip_address1"
                          },
                          {
                            "table": "t_api_token",
                            "column": "ip_address2"
                          },
                          {
                            "table": "t_api_token",
                            "column": "ip_address3"
                          }
                        ],
                        "table": {
                          "name": "t_api_token"
                        },
                        "joins": [],
                        "query": "SELECT salt AS getSaltvalue, ip_address1, ip_address2, ip_address3\nFROM t_api_token\nWHERE user_id = :P1 /* {{$_POST.UserId}} */ AND api_token = :P2 /* {{$_POST.Token}} */ AND status = 1",
                        "params": [
                          {
                            "operator": "equal",
                            "type": "expression",
                            "name": ":P1",
                            "value": "{{$_POST.UserId}}"
                          },
                          {
                            "operator": "equal",
                            "type": "expression",
                            "name": ":P2",
                            "value": "{{$_POST.Token}}"
                          }
                        ],
                        "wheres": {
                          "condition": "AND",
                          "rules": [
                            {
                              "id": "t_api_token.user_id",
                              "field": "t_api_token.user_id",
                              "type": "double",
                              "operator": "equal",
                              "value": "{{$_POST.UserId}}",
                              "data": {
                                "table": "t_api_token",
                                "column": "user_id",
                                "type": "number",
                                "columnObj": {
                                  "type": "integer",
                                  "primary": false,
                                  "nullable": false,
                                  "unique": false,
                                  "name": "user_id"
                                }
                              },
                              "operation": "="
                            },
                            {
                              "id": "t_api_token.api_token",
                              "field": "t_api_token.api_token",
                              "type": "string",
                              "operator": "equal",
                              "value": "{{$_POST.Token}}",
                              "data": {
                                "table": "t_api_token",
                                "column": "api_token",
                                "type": "text",
                                "columnObj": {
                                  "type": "string",
                                  "primary": false,
                                  "nullable": false,
                                  "maxLength": -5,
                                  "unique": false,
                                  "name": "api_token"
                                }
                              },
                              "operation": "="
                            },
                            {
                              "id": "t_api_token.status",
                              "field": "t_api_token.status",
                              "type": "double",
                              "operator": "equal",
                              "value": 1,
                              "data": {
                                "table": "t_api_token",
                                "column": "status",
                                "type": "number",
                                "columnObj": {
                                  "type": "integer",
                                  "primary": false,
                                  "nullable": true,
                                  "unique": false,
                                  "name": "status"
                                }
                              },
                              "operation": "="
                            }
                          ],
                          "conditional": null,
                          "valid": true
                        },
                        "primary": "id"
                      }
                    },
                    "output": false,
                    "meta": [
                      {
                        "type": "text",
                        "name": "getSaltvalue"
                      },
                      {
                        "type": "text",
                        "name": "ip_address1"
                      },
                      {
                        "type": "text",
                        "name": "ip_address2"
                      },
                      {
                        "type": "text",
                        "name": "ip_address3"
                      }
                    ],
                    "outputType": "object"
                  },
                  {
                    "name": "UserIP",
                    "module": "core",
                    "action": "setvalue",
                    "options": {
                      "value": "{{$_SERVER.REMOTE_ADDR}}"
                    },
                    "meta": [],
                    "outputType": "text",
                    "output": false
                  },
                  {
                    "name": "",
                    "module": "core",
                    "action": "condition",
                    "options": {
                      "if": "{{getSalt.getSaltvalue}}",
                      "then": {
                        "steps": {
                          "name": "",
                          "module": "core",
                          "action": "condition",
                          "options": {
                            "if": "{{(getSalt.ip_address1==UserIP)||(getSalt.ip_address2==UserIP)||(getSalt.ip_address3==UserIP)}}",
                            "then": {
                              "steps": [
                                {
                                  "name": "ApiBalance",
                                  "module": "dbconnector",
                                  "action": "single",
                                  "options": {
                                    "connection": "postgres_gcpServer",
                                    "sql": {
                                      "type": "SELECT",
                                      "columns": [
                                        {
                                          "table": "m_users",
                                          "column": "balance_amt",
                                          "aggregate": ""
                                        }
                                      ],
                                      "table": {
                                        "name": "m_users"
                                      },
                                      "joins": [],
                                      "wheres": {
                                        "condition": "AND",
                                        "rules": [
                                          {
                                            "id": "m_users.id",
                                            "field": "m_users.id",
                                            "type": "double",
                                            "operator": "equal",
                                            "value": "{{$_POST.UserId}}",
                                            "data": {
                                              "table": "m_users",
                                              "column": "id",
                                              "type": "number",
                                              "columnObj": {
                                                "type": "increments",
                                                "default": "",
                                                "primary": true,
                                                "nullable": false,
                                                "unique": true,
                                                "name": "id"
                                              }
                                            },
                                            "operation": "="
                                          },
                                          {
                                            "id": "m_users.u_status",
                                            "field": "m_users.u_status",
                                            "type": "string",
                                            "operator": "equal",
                                            "value": "1",
                                            "data": {
                                              "table": "m_users",
                                              "column": "u_status",
                                              "type": "text",
                                              "columnObj": {
                                                "type": "string",
                                                "primary": false,
                                                "nullable": true,
                                                "maxLength": -5,
                                                "unique": false,
                                                "name": "u_status"
                                              }
                                            },
                                            "operation": "="
                                          }
                                        ],
                                        "conditional": null,
                                        "valid": true
                                      },
                                      "query": "SELECT balance_amt\nFROM m_users\nWHERE id = :P1 /* {{$_POST.UserId}} */ AND u_status = '1'",
                                      "params": [
                                        {
                                          "operator": "equal",
                                          "type": "expression",
                                          "name": ":P1",
                                          "value": "{{$_POST.UserId}}"
                                        }
                                      ],
                                      "primary": "id"
                                    }
                                  },
                                  "output": false,
                                  "meta": [
                                    {
                                      "type": "text",
                                      "name": "balance_amt"
                                    }
                                  ],
                                  "outputType": "object"
                                },
                                {
                                  "name": "apibalance",
                                  "module": "core",
                                  "action": "setvalue",
                                  "options": {
                                    "value": "{{ApiBalance.balance_amt.toNumber().currency('', '.', ',', 3)}}"
                                  },
                                  "meta": [],
                                  "outputType": "text",
                                  "output": true
                                },
                                {
                                  "name": "Resp",
                                  "module": "core",
                                  "action": "setvalue",
                                  "options": {
                                    "value": "Fetching Success"
                                  },
                                  "meta": [],
                                  "outputType": "text",
                                  "output": true
                                }
                              ]
                            },
                            "else": {
                              "steps": [
                                {
                                  "name": "Resp",
                                  "module": "core",
                                  "action": "setvalue",
                                  "options": {
                                    "value": "{{'Unauthorized user with IP '+UserIP}}"
                                  },
                                  "meta": [],
                                  "outputType": "text",
                                  "output": true
                                },
                                {
                                  "name": "apibalance",
                                  "module": "core",
                                  "action": "setvalue",
                                  "options": {
                                    "value": "\n"
                                  },
                                  "meta": [],
                                  "outputType": "text",
                                  "output": true
                                }
                              ]
                            }
                          },
                          "outputType": "boolean"
                        }
                      },
                      "else": {
                        "steps": [
                          {
                            "name": "apibalance",
                            "module": "core",
                            "action": "setvalue",
                            "options": {
                              "value": "\n"
                            },
                            "meta": [],
                            "outputType": "text",
                            "output": true
                          },
                          {
                            "name": "Resp",
                            "module": "core",
                            "action": "setvalue",
                            "options": {
                              "value": "Unauthorized Access! Parameter Mismatch"
                            },
                            "meta": [],
                            "outputType": "text",
                            "output": true
                          }
                        ]
                      }
                    },
                    "outputType": "boolean"
                  }
                ]
              },
              "else": {
                "steps": [
                  {
                    "name": "apibalance",
                    "module": "core",
                    "action": "setvalue",
                    "options": {
                      "value": "\n"
                    },
                    "meta": [],
                    "outputType": "text",
                    "output": true
                  },
                  {
                    "name": "Resp",
                    "module": "core",
                    "action": "setvalue",
                    "options": {
                      "value": "You are missing mandatory fields, please check API document"
                    },
                    "meta": [],
                    "outputType": "text",
                    "output": true
                  }
                ]
              }
            },
            "outputType": "boolean"
          }
        },
        "catch": {
          "steps": [
            {
              "name": "apibalance",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": "\n"
              },
              "meta": [],
              "outputType": "text",
              "output": true
            },
            {
              "name": "Resp",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": "Suspicious Activity, Try Again"
              },
              "meta": [],
              "outputType": "text",
              "output": true
            }
          ]
        }
      }
    }
  }
}